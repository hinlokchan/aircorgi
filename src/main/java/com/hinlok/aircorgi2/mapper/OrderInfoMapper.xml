<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hinlok.aircorgi2.mapper.OrderInfoMapper">
  <resultMap id="BaseResultMap" type="com.hinlok.aircorgi2.model.OrderInfo">
    <id column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="create_datetime" jdbcType="VARCHAR" property="createDatetime" />
    <result column="flight_num" jdbcType="VARCHAR" property="flightNum" />
    <result column="dep_date" jdbcType="VARCHAR" property="depDate" />
    <result column="ticket_amount" jdbcType="INTEGER" property="ticketAmount" />
    <result column="seat_type" jdbcType="VARCHAR" property="seatType" />
    <result column="price_amount" jdbcType="INTEGER" property="priceAmount" />
    <result column="order_stat" jdbcType="INTEGER" property="orderStat" />
  </resultMap>
  <sql id="Base_Column_List">
    order_id, user_id, create_datetime, flight_num, dep_date, ticket_amount, seat_type, 
    price_amount,order_stat,passenger1,passenger2,passenger3
  </sql>

  <insert id="createOrderByOrderId">
    insert into order_info(order_id, user_id, create_datetime,
      ticket_amount, price_amount,order_stat)
    values (#{orderId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{createDatetime,jdbcType=VARCHAR},
    #{ticketAmount,jdbcType=INTEGER}, #{priceAmount,jdbcType=INTEGER},#{orderStat,jdbcType=INTEGER})
  </insert>

  <insert id="updateOrderByOrderId">
    update order_info
    set
    flight_num='${orderInfo.flightNum}',
    dep_date='${orderInfo.depDate}',
    seat_type='${orderInfo.seatType}',
    passenger1='${orderInfo.passenger1}',
    passenger2='${orderInfo.passenger2}',
    passenger3='${orderInfo.passenger3}'
    where order_id = '${orderId}'
  </insert>

  <select id="selectOrderStatByOrderId">
    select
    order_stat
    from
    order_info
    where
    order_id=#{orderId}
  </select>

  <select id="selectOrderInfoByOrderId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    order_info
    where
    order_id = '${orderId}'
  </select>

  <select id="selectOrderInfoObjectByOrderId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    order_info
    where
    order_id = '${orderId}'
  </select>

  <update id="updateOrderStatByOrderId">
    update order_info
    set order_stat=#{orderStat}
    where order_id=#{orderId}
  </update>

  <select id="selectAllOrderByUserId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    order_info
    where
    user_id = '${userId}'
    order by create_datetime desc
  </select>



  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_info
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from order_info
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.hinlok.aircorgi2.model.OrderInfo">
    insert into order_info (order_id, user_id, create_datetime, 
      flight_num, dep_date, ticket_amount, 
      seat_type, price_amount)
    values (#{orderId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{createDatetime,jdbcType=VARCHAR},
      #{flightNum,jdbcType=VARCHAR}, #{depDate,jdbcType=VARCHAR}, #{ticketAmount,jdbcType=INTEGER},
      #{seatType,jdbcType=VARCHAR}, #{priceAmount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hinlok.aircorgi2.model.OrderInfo">
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createDatetime != null">
        create_datetime,
      </if>
      <if test="flightNum != null">
        flight_num,
      </if>
      <if test="depDate != null">
        dep_date,
      </if>
      <if test="ticketAmount != null">
        ticket_amount,
      </if>
      <if test="seatType != null">
        seat_type,
      </if>
      <if test="priceAmount != null">
        price_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createDatetime != null">
        #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="flightNum != null">
        #{flightNum,jdbcType=VARCHAR},
      </if>
      <if test="depDate != null">
        #{depDate,jdbcType=DATE},
      </if>
      <if test="ticketAmount != null">
        #{ticketAmount,jdbcType=INTEGER},
      </if>
      <if test="seatType != null">
        #{seatType,jdbcType=VARCHAR},
      </if>
      <if test="priceAmount != null">
        #{priceAmount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hinlok.aircorgi2.model.OrderInfo">
    update order_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createDatetime != null">
        create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="flightNum != null">
        flight_num = #{flightNum,jdbcType=VARCHAR},
      </if>
      <if test="depDate != null">
        dep_date = #{depDate,jdbcType=DATE},
      </if>
      <if test="ticketAmount != null">
        ticket_amount = #{ticketAmount,jdbcType=INTEGER},
      </if>
      <if test="seatType != null">
        seat_type = #{seatType,jdbcType=VARCHAR},
      </if>
      <if test="priceAmount != null">
        price_amount = #{priceAmount,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hinlok.aircorgi2.model.OrderInfo">
    update order_info
    set user_id = #{userId,jdbcType=INTEGER},
      create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      flight_num = #{flightNum,jdbcType=VARCHAR},
      dep_date = #{depDate,jdbcType=DATE},
      ticket_amount = #{ticketAmount,jdbcType=INTEGER},
      seat_type = #{seatType,jdbcType=VARCHAR},
      price_amount = #{priceAmount,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>